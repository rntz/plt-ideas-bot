What's the idea,                    Whose idea is it,           URL
linear session types,               Caires and Pfenning's,      http://www.cs.cmu.edu/~fp/papers/mscs13.pdf
distributed ML5,                    Tom Murphy's,               http://www.cs.cmu.edu/~rwh/papers/ml5/tgc.pdf
tangible functional programming,    Conal Elliott's,            http://conal.net/papers/Eros/
judgmental modal logic,             Pfenning and Davies',       http://www.cs.cmu.edu/~fp/papers/mscs00.pdf
deconstructed modal logic,          Jason Reed's,               http://www.cs.cmu.edu/~jcreed/papers/jdml.pdf
parsing with derivatives,           Darais and Might's,         http://matt.might.net/papers/might2011derivatives.pdf
adjoint calculus,                   Benton and Wadler's,        http://homepages.inf.ed.ac.uk/wadler/papers/linearmonad/linearmonad.ps
derivatives of regular expressions, Brzozowski's,               http://dl.acm.org/citation.cfm?id=321249
functional reactive programming,,
dual calculus,                      Wadler's,                   http://homepages.inf.ed.ac.uk/wadler/papers/dual/dual.pdf
capabilities,,
information flow,,
first-class continuations,,
delimited continuations,,
modal logic,,
Datalog,,
Prolog,,
lambda calculus,,
combinator calculus,,
relational algebra,,
bidirectional type checking,,
derivatives of containers,,
homotopy type theory,,
gradual typing,,
blame calculus,,
garbage collection,,
region typing,,
ML's module system,                 ,                           https://www.cs.cmu.edu/~rwh/papers/thoms/popl.pdf
Haskell's type classes,,
existential types,,
parametricity,                     Reynold's,                   http://www.cse.chalmers.se/edu/year/2010/course/DAT140_Types/Reynolds_typesabpara.pdf
language-integrated query,"Cheney, Lindley, and Wadler's",      http://homepages.inf.ed.ac.uk/jcheney/publications/cheney13icfp.pdf
the Curry-Howard correspondence,    ,                           http://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf
staged evaluation,,
typed assembly language,            Morrissett's,               https://www.cs.cmu.edu/~crary/papers/1999/tal/tal.ps
dependent types,,
hygienic macros,                    Scheme's,                   http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-7.html#%_idx_184
algebraic ornaments,                McBride's,                  https://personal.cis.strath.ac.uk/conor.mcbride/pub/OAAO/Ornament.pdf
domain-specific languages,,
reader macros,Common Lisp's,http://www.csee.umbc.edu/courses/331/resources/lisp/onLisp/17readMacros.pdf
